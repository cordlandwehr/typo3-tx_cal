# Check if cal is allowed to be cached or not. If not (f.e. if we're in frontend editing mode or a search query is processed) change to a USER_INT
[userFunc = user_isCalNotAllowedToBeCached()] 
plugin.tx_cal_controller = USER_INT
plugin.tx_cal_controller.isUserInt = 1
[global]

config.cache_clearAtMidnight = 1
plugin.tx_cal_controller {
	parseFunc < styles.content.parseFunc
	userFunc = tx_cal_controller->main

	# @description	List of PIDs where cal records are found.
	pidList = {$plugin.tx_cal_controller.pidList}

	# @description	List of csv of piVars, which should not appear in the url, but should be stored inside the users session. Attention: this works only, if the piVar is the same through a whole single page
	sessionPiVars = page_id

	# @description	Name of the calendar.
	# @also			FlexForm
	calendarName = My Calendar

	# @description	Allows visitors to subscribe to an event and be notified when it changes.
	# @also			FlexForm
	allowSubscribe = 1

	# @description	Allows registered frontend users to subscribe based on the email address in their account.
	# @also			FlexForm
	subscribeFeUser = 0

	# @description	Enables CAPTCHA-based validation before a vistor can subscribe to an event.  Requires CAPTCHA Library extension.
	# @also			FlexForm
	# @see			http://typo3.org/extensions/repository/search/captcha/
	subscribeWithCaptcha = 0
	
	# @description	Add your own classes to the wrapping div of the plugin
	additionalWrapperClasses =
	
	# @description	Set this to 1 if you do not want the plugin to have a wrapping div tag
	noWrapInBaseClass = 0
	
	dateConfig {
		# @description	Position of the day in a date string (0/1/2). Example: 2007-07-30 -> 2
		dayPosition = 2
		# @description	Position of the month in a date string (0/1/2). Example: 2007-07-30 -> 1
		monthPosition = 1
		# @description	Position of the year in a date string (0/1/2). Example: 2007-07-30 -> 0
		yearPosition = 0
		# @description	The character, which splits the day, month and year in a date string
		splitSymbol = -
		# @description Number of characters that should be used for monthname abbreviations
		monthAbbreviationLength = 3
		# @description Number of characters that should be used for weekday abbreviations
		weekdayAbbreviationLength = 3
	}

	dateParserConf {
		# @description	Changes the order of day and month
		USmode = 0
	}
	
	# @description stdWrap that is applied to every date value coming from cal. You can use this f.e. to do some charset conversion when no locale with the correct charset is available on the webserver.
	date_stdWrap {
		# example for charset conversion, where the locale of the server uses iso-8859-1.
		#csConv = iso-8859-1
	}
	
	# @description  Displays translated records, even if there is no default translation. 
	#				Useful if an event should only show up for one language. 
	showRecordsWithoutDefaultTranslation = 0
	
	view {
		# @description	Allowed calendar views. First one in the list is the default view.  
		#				Options are day,week,month,year,list,event,search_all,search_event,search_location,search_organizer,organizer,location,admin,create_event,confirm_event,save_event,edit_event,delete_event,remove_event,create_location,confirm_location,save_location,edit_loaction,delete_location,remove_location,create_organizer,confirm_organizer,save_organizer,edit_organizer,delete_organizer,remove_organizer,create_calendar,confirm_calendar,save_calendar,edit_calendar,delete_calendar,remove_calendar,create_category,confirm_category,save_category,edit_category,delete_category,remove_category.
		# @also			FlexForm
		allowedViews =
		
		# @description	Additional views
		customViews =
		
		# @description	Info text if there is no function nor service to handle a desired view
		noViewFoundHelpText = Controller function not found: 

        # @description	Categories can be preselected. Enter a single ID or a comma separated list
		category = 
		
		# @description	Calendars can be preselected. Enter a single ID or a comma separated list
		calendar =
        
		# @description	Relative path (from TYPO3 site root) that images should be loaded from.
		# @also					Constants
		imagePath = {$plugin.tx_cal_controller.view.imagePath}
		
		# @description	Relative path (from TYPO3 site root) that javascripts should be loaded from.
		# @also					Constants
		javascriptPath = {$plugin.tx_cal_controller.view.javascriptPath}

		# @description	First day of the week.
		# @also			FlexForm
		weekStartDay = Monday
		
		# @description	The view to be rendered when clicking on a day link
		dayLinkTarget = day
		
		# @description	The view to be rendered when clicking on a week link
		weekLinkTarget = week
		
		# @description	The view to be rendered when clicking on a month link
		monthLinkTarget = month
		
		# @description	The view to be rendered when clicking on a year link
		yearLinkTarget = year
		
		# @description	The view to be rendered when clicking on a list link
		listLinkTarget = list
		
		# @description	The view to be rendered when clicking on a location link
		locationLinkTarget = location
		
		# @description	The view to be rendered when clicking on a organizer link
		organizerLinkTarget = organizer
		
		# @description	Views before that date will get a no_follow meta tag
		startLinkRange = -5 month
		
		# @description	Views after that date will get a no_follow meta tag
		endLinkRange = +5 month
		
		# @description	String to be displayed in create and edit forms for required fields
		required = <span class="cal_required">*</span>

		# @description	Content object, that defines how a link is rendered by default
		defaultLinkSetup = TEXT
		defaultLinkSetup {
			current = 1
			typolink {
				parameter.field = link_parameter
				ATagParams.field = link_ATagParams
				additionalParams.field = link_additionalParams
				#section.field = link_section
				title.current = 1
				title.htmlSpecialChars = 1
				title.override {
					field = title
					required = 1
				}
				no_cache.field = link_no_cache
				useCacheHash = 1
			}
		}
		
		# @description	Content object, that defines how a link to a different view type is rendered by default
		defaultViewLinkSetup < .defaultLinkSetup
		defaultViewLinkSetup {		
			typolink.title.override.override.cObject = TEXT
			typolink.title.override.override.cObject {
				field = view
				wrap = %%%|_VIEW%%%
				case = upper
				required = 1
			}
		}

		# @description	The content object used for back links
		backLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup
		
		# @description	Displays only events a current user is allowed to edit or delete
		showEditableEventsOnly = 0

		# Configuration of the event view
		event {
			# @description	Page to display the event view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			eventViewPid =

			# @description	Page view configured for creating an event. If this is not configured,
			#				then the current page will be used instead.
			createEventViewPid = 

			# @description	Page view configured for editing an event. If this is not configured,
			#				then the current page will be used instead.
			editEventViewPid = 

			# @description	Page view configured for deleting an event. If this is not configured,
			#				then the current page will be used instead.
			deleteEventViewPid = 

			# @description	Template for the standard event view. Any events following the standard event
			#				structure can be used with this template.
			# @also			Constants
			eventTemplate = {$plugin.tx_cal_controller.view.event.eventTemplate}

			# @description	Template for the phpicalendar event view.  This option is deprecated since version
			#				1.3.0 and will be removed completely by 1.5.0.
			phpicalendarEventTemplate= {$plugin.tx_cal_controller.view.event.phpicalendarEventTemplate}

			# @description	Template for the phpicalendar event view.  This is an example of how different
			#				event types can provide their own views.
			# @also			Constants
			eventModelTemplate = {$plugin.tx_cal_controller.view.event.eventModelTemplate}

			# @description	Template for the event subscription manager view.
			# @also			Constants
			subscriptionManagerTemplate = {$plugin.tx_cal_controller.view.event.subscriptionManagerTemplate}

			# @description	Sets the event title as page title
			substitutePageTitle = 1

			# @description	Enables a preview of the event
			isPreview = 0

			# @description	stdWrap for the link text of category
			categoryLink_stdWrap {
				wrap = 
			}

			# Configuration of the event object itself
			event {
				# these next two settings are deprecated from now on, because you can configure your link title freely with TS, but they are still here for a default backwards compatible setup
				# see the actual link configuration in TS object 'eventLink' further down

				# @description	deprecated: Enables the link title to be the title of the event. If disabled you have to define your own link title.
				# @also	plugin.tx_cal_controller.view.event.event.ownLinkTitleText
				useTitleForLinkTitle = 1
	
				# @description	deprecated: Defines an own link title, if useTitleForLinkTitle has been disabled.
				ownLinkTitleText = TEXT
				ownLinkTitleText {
				}

				# @description	Content object that defines how a link to a event is rendered.
				# @also	plugin.tx_cal_controller.view.event.event.eventLink
				eventLink =< plugin.tx_cal_controller.view.defaultLinkSetup

				# @description	Content object that defines how the so called 'more link' is rendered in preview mode.
				moreLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				moreLink {
						typolink.title.override.override.dataWrap = %%%MORE_LABEL%%%
				}
	
				# @description	If start date and end date are the same, only show start.
				dontShowEndDateIfEqualsStartDate = 1
	
				# @description	Same as dontShowEndDateIfEqualsStartDate but for allday events.
				dontShowEndDateIfEqualsStartDateAllday = 1

				# @description	Enable this and you can define a special style for events a fe-user is owner of
				# @also	plugin.tx_cal_controller.view.event.event.headerStyleOfOwnEvent
				# @also	plugin.tx_cal_controller.view.event.event.bodyStyleOfOwnEvent
				differentStyleIfOwnEvent = 0
	
				# @description	Defines a special header style for events a fe-user is owner of
				# @also	plugin.tx_cal_controller.view.event.event.differentStyleIfOwnEvent
				headerStyleOfOwnEvent = green_catheader
	
				# @description	Defines a special body style for events a fe-user is owner of
				# @also	plugin.tx_cal_controller.view.event.event.differentStyleIfOwnEvent
				bodyStyleOfOwnEvent = green_catbody
	
				# @description	The default length in seconds, if no or a wrong end has been specified
				defaultEventLength = 1800
	
				# @description	Image for the event status.
				todoIcon = <img src="###IMG_PATH###/%s.gif" alt="" border="0" hspace="0" vspace="0" />&nbsp;
	
				# @description	Image tag for icon used to indicate recurring events.
				recurringIcon = <img src="###IMG_PATH###/recurring.gif" width="9" height="9" alt="" border="0" hspace="0" vspace="0" />&nbsp;
	
				# @description	Image tag for icon used in link to frontend creation of an event.
				addIcon = <img src="###IMG_PATH###/add_small.png" border="0"/>
	
				# @description	Image tag for icon used in link to frontend editing of an event.
				editIcon = <img src="###IMG_PATH###/edit.gif" border="0"/>

				# @description	Image tag for icon used in link to frontend deletion of an event.
				deleteIcon = <img src="###IMG_PATH###/delete.gif" border="0"/>
				
				# @description Image tag for category icon
				categoryIcon = <img src="%%%CATICON%%%" border="0" height="24" title="%%%CATTITLE%%%"/>
					
				# @description	Configuration for the add event link. Default setting is to act backwards compatible, but it can be altered with TS
				addLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				addLink {
					typolink.useCacheHash = 0
					typolink.title.override.override.dataWrap = %%%CREATE_EVENT%%%
				}

				# @description	Configuration for the edit event link. Default setting is to act backwards compatible, but it can be altered with TS
				editLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				editLink {
					typolink.title.override.override.dataWrap = %%%EDIT_EVENT%%%
				}
	
				# @description	Configuration for the delete event link. Default setting is to act backwards compatible, but it can be altered with TS
				deleteLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				deleteLink {
					typolink.title.override.override.dataWrap = %%%DELETE_EVENT%%%
				}
	
				# @description	Date format
				eventDateFormat = {$plugin.tx_cal_controller.view.dateFormat}
	
				# @description	Time format
				dateFormat = {$plugin.tx_cal_controller.view.dateFormat}
	
				# @description	Time format
				timeFormat = {$plugin.tx_cal_controller.view.timeFormat}
	
				# @description	Content object for the create-user name
				cruser_name = TEXT
				cruser_name {
					current = 1
					dataWrap = <div>CrUserName:&nbsp; |</div>
					db_field = username
				}

				# @description	Defines an additional style class for an event, according to the calendar
				calendarStyle = TEXT
				calendarStyle {
					current = 1
					wrap = calendar|
				}

				# @description	Content object for the event title
				title = TEXT
				title {
					current = 1
					dataWrap = <div>%%%TITLE_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for the event title of allDay Events
				alldayTitle < .title

				# @description	Content object for the event start date
				startdate = TEXT
				startdate  {
					current = 1
					dataWrap = <div>%%%STARTDATE_LABEL%%%:&nbsp; |</div>
				}

				# @description	Content object for the event end date
				enddate = TEXT
				enddate {
					current = 1
					noTrimWrap = | - ||
					required = 1
					dataWrap = <div>%%%ENDDATE_LABEL%%%:&nbsp; |</div>
				}

				# @description	Content object for the event start time
				starttime = TEXT
				starttime {
					current = 1
					dataWrap = <div>%%%STARTTIME_LABEL%%%:&nbsp; |</div>
				}

				# @description	Content object for the event end time
				endtime = TEXT
				endtime {
					current = 1
					dataWrap = <div>%%%ENDTIME_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for the event category
				category = TEXT
				category {
					current = 1
					required = 1
					dataWrap = <div>%%%CATEGORY%%%:&nbsp; |</div>
				}
	
				# @description	Content object for the event category link(s)
				category_link < .category
				
				# @description	stdWrap for the link text of category
				categoryLink_stdWrap {
					wrap = 
				}

				# @description	for more than one category this is the separator
				categoryLink_splitChar = TEXT
				categoryLink_splitChar {
					value = ,
					noTrimWrap= || |
				}

				# @description	Content Object for rendering the categories as link
				categoryLink =< plugin.tx_cal_controller.view.defaultLinkSetup

				# @description	Content object for rendering the calendar name
				calendar_title = TEXT
				calendar_title {
					current = 1
					required = 1
					dataWrap = <div>%%%CALENDAR%%%:&nbsp; |</div>
				}

				# @description	Content object for the event organizer
				organizer =< plugin.tx_cal_controller.view.defaultLinkSetup
				organizer {
					required = 1
					dataWrap = <div>%%%ORGANIZER%%%:&nbsp; |</div>
				}

				# @description	Content object for the event location 
				location =< plugin.tx_cal_controller.view.defaultLinkSetup
				location {
					required = 1
					dataWrap = <div>%%%LOCATION%%%:&nbsp; |</div>
				}
	
				# @description	Content object for event teaser
				teaser = TEXT
				teaser {
					current = 1
					required = 1
					# if the teaser field is empty, use the description cropped to 150 chars
					override {
						cObject = TEXT
						cObject {
							if.isFalse.field = teaser
							field = description
							required = 1
							crop = 150|...|1
						}
					}
					dataWrap = <div>%%%TEASER_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for event description
				description =< tt_content.text.20
				description {
					field = description
					required = 1
					dataWrap = <div>%%%DESCRIPTION_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for event image
				image =< tt_content.image.20
				image {
					//17 = in text right
					textPos.override = 17
					layout.key.override = 17
					1 {
						altText.override.field = imagealttext
						titleText.override.field = imagetitletext
						caption.override.field = imagecaption
					}

					imgMax = 4
					imgList >
					imgList.override.current = 1
					imgPath = {$plugin.tx_cal_controller.uploadPath.image}

					stdWrap.dataWrap = <div>%%%IMAGE_LABEL%%%:&nbsp; |</div>
					stdWrap.required = 1
					1.imageLinkWrap.enable.field >
					1.imageLinkWrap.enable.override = 1
					maxW = {$plugin.tx_cal_controller.singleMaxW}
					maxWInText = {$plugin.tx_cal_controller.singleMaxW}
					# switch to turn on the lightbox: kj_imagelightbox2 
					# 1.imageLightbox2 = 1
					# switch to turn on the lightbox: perfectlightbox
					tx_perfectlightbox_activate = 1
				}
	
				# @description_image	Content object for rendering the description and the images with the regular 'text with image' (TEXTPIC) cObject
				description_image < .image
				description_image {
					imgList.override {
						current >
						field = image
					}
					stdWrap.dataWrap >
					text =< tt_content.textpic.20.text
					text.20.field = description
				}
	
				# @description	Defines cropping for event description in event view.
				preview =< plugin.tx_cal_controller.view.event.event.description
				preview {
					crop = 100|...|1
					stripHtml = 1
				}

				# @description	Content object for event attachment
				attachment =< tt_content.uploads
				attachment {
					layout = 1
					showFileSize = 1
					filePath = {$plugin.tx_cal_controller.uploadPath.media}
					20.stdWrap.if.isTrue.field = media
					20.stdWrap.dataWrap = <div>%%%ATTACHMENT_LABEL%%%:&nbsp;|</div>
				}
	
				# @description	Content object for event attendee
				attendee = TEXT
				attendee {
					current = 1
					required = 1
					dataWrap = <div>%%%ATTENDEE%%%:&nbsp; |</div>
				}
				
				# @description	Content object for the todo status
				status = TEXT
				status {
					value = 
				}
				
				# @description	Content object for the todo priority
				priority = TEXT
				priority {
					value = 
				}
				
				# @description	Content object for the todo completed
				completed = TEXT
				completed {
					value = 
				}
				
				defaultFeUserDisplayName = TEXT
				defaultFeUserDisplayName {
					field = name
					override {
						cObject = TEXT
						cObject {
							if.isFalse.field = name
							field = username
							required = 1
						}
					}
					required = 1
				}
				
				defaultFeGroupDisplayName = TEXT
				defaultFeGroupDisplayName {
					field = title
					override {
						cObject = TEXT
						cObject {
							if.isFalse.field = title
							field = description
							required = 1
						}
					}
					required = 1
				}
	
				# @description	Icon definition for the different attendee status: CHAIR, ACCEPTED or DECLINE
				attendeeIcon = <img src="###IMG_PATH###/%s.png" alt="%s" title="%s" class="no_border"/>

				# @description	Content object for event subscription link of a logged in user when the user is currently monitoring the event
				isMonitoringEventLink =< plugin.tx_cal_controller.view.defaultLinkSetup
	
				# @description	Content object for event subscription link of a logged in user when the user is currently NOT monitoring the event
				isNotMonitoringEventLink =< plugin.tx_cal_controller.view.defaultLinkSetup

				# @description	Content object for decline meeting attendance link
				declineMeetingLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				declineMeetingLink.typolink.title.dataWrap = %%%MEETING_CHANGESTATUS%%%
				
				# @description	Content object for accept meeting attendance link
				acceptMeetingLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				acceptMeetingLink.typolink.title.dataWrap = %%%MEETING_CHANGESTATUS%%%

				# @description	Content object for event ics link
				ics =< plugin.tx_cal_controller.view.defaultLinkSetup
				ics {
					current = 0
					value = |
					required = 1
					typolink {
						# wrapping the parameter with the typenum of the ics page
						parameter.wrap = |,{$plugin.tx_cal_controller.view.ics.typeNum}
						title.override.override = %%%ICSLINK_LABEL%%%
						useCacheHash = 0
					}
					wrap = <div>|</div>
				}
	
				# @description	Content object if no event has been found
				noEventFound = TEXT
				noEventFound {
					value = %%%NO_RESULTS%%%
				}
				
				# @description	Displays location related events
				includeEventsInResult = 0
				
				includeEventsInResult {
					# @description	Shows the events in a reverse order
					reverse = 0
					
					starttime = now
					endtime = +3 month
				}
				
				rel_startdate = TEXT
				rel_startdate  {
					field = start
					strftime = %m.%d.%Y
				}
				
				rel_title = TEXT
				rel_title {
					field = title
				}
				
				# @description	Add an additional part to the sql statement for events with categories
				additionalCategoryWhere = TEXT
					additionalCategoryWhere {
				}
			}
			notify {
				# @description	The page id where the subscription manager view is allowed
				subscriptionViewPid = {$plugin.tx_cal_controller.view.event.notify.subscriptionViewPid}
	
				# @description	Template for subscription confirmation
				confirmTemplate = {$plugin.tx_cal_controller.view.event.notify.confirmTemplate}
	
				# @description	Title for subscription confirmation email
				confirmTitle = Please confirm the event monitoring on www.abc.com
	
				# @description	Template for subscription stop confirmation
				unsubscribeConfirmTemplate = {$plugin.tx_cal_controller.view.event.notify.unsubscribeConfirmTemplate}
	
				# @description	Title for subscription stop confirmation email
				unsubscribeConfirmTitle = Please confirm the event monitoring stop on www.abc.com
	
				# @description	Template for email notification if an event is created.
				# @also	Constants
				all.onCreateTemplate = {$plugin.tx_cal_controller.view.event.notify.all.onCreateTemplate}

				# @description	Template for email notification if an event has been changed.
				# @also	Constants
				all.onChangeTemplate = {$plugin.tx_cal_controller.view.event.notify.all.onChangeTemplate}
	
				# @description	Template for email notification if an event has been deleted.
				# @also	Constants
				all.onDeleteTemplate = {$plugin.tx_cal_controller.view.event.notify.all.onDeleteTemplate}

				# @description	Title for notification emails on create.
				all.onCreateEmailTitle = The event ###TITLE### has been created
	
				# @description	Title for notification emails on change.
				all.onChangeEmailTitle = The event ###TITLE### has been changed
	
				# @description	Title for notification emails on delete.
				all.onDeleteEmailTitle = The event ###TITLE### has been deleted
	
				# @description	Email address that notification emails are sent from.
				# @also	Constants
				emailAddress = {$plugin.tx_cal_controller.emailAddress}

				# @description	Reply-to address for notification emails.
				# @also	Constants
				emailReplyAddress = {$plugin.tx_cal_controller.emailAddress}

				# @description	From name for notification emails.
				# @also	Constants
				fromName = {$plugin.tx_cal_controller.emailName}

				# @description	Reply-to name for notification emails.
				# @also	Constants
				replyToName = {$plugin.tx_cal_controller.emailName}

				# @description	Organization for notification emails.
				# @also	Constants
				organisation = {$plugin.tx_cal_controller.emailOrganisation}
	
				# @description	Date format for notification emails.
				# @also	Constants
				dateFormat = {$plugin.tx_cal_controller.view.dateFormat}
	
				# @description	Time format for notification emails.
				# @also	Constants
				timeFormat = {$plugin.tx_cal_controller.view.timeFormat}
			}
			
			# @description	Enables the reminder functionality for all events
			remind = {$plugin.tx_cal_controller.view.event.remind}

			remind {
				# @description	Time in minutes, to send out the reminder before the event starts.
				time = {$plugin.tx_cal_controller.view.event.remind.time}
	
				# @description	Template for email reminder for an event.
				# @also	Constants
				all.template = {$plugin.tx_cal_controller.view.event.remind.all.template}
	
				# @description		Title for reminder emails.
				all.emailTitle = Reminder for event: ###TITLE###
	
				# @description	Email address that notification emails are sent from.
				# @also	Constants
				emailAddress = {$plugin.tx_cal_controller.emailAddress}

				# @description	Reply-to address for notification emails.
				# @also	Constants
				emailReplyAddress = {$plugin.tx_cal_controller.emailAddress}

				# @description	From name for notification emails.
				# @also	Constants
				fromName = {$plugin.tx_cal_controller.emailName}

				# @description	Reply-to name for notification emails.
				# @also	Constants
				replyToName = {$plugin.tx_cal_controller.emailName}

				# @description	Organization for notification emails.
				# @also	Constants
				organisation = {$plugin.tx_cal_controller.emailOrganisation}
	
				# @description	Date format for notification emails.
				# @also	Constants
				dateFormat = {$plugin.tx_cal_controller.view.dateFormat}
	
				# @description	Time format for notification emails.
				# @also	Constants
				timeFormat = {$plugin.tx_cal_controller.view.timeFormat}
			}
			meeting {
				# @description	Template for email initiation for a meeting.
				# @also	Constants
				template = {$plugin.tx_cal_controller.view.event.meeting.template}
	
				# @description	Template for email rescheduling a meeting.
				# @also	Constants
				onChangeTemplate = {$plugin.tx_cal_controller.view.event.meeting.onChangeTemplate}
	
				# @description	The page id where the meeting-status view is allowed
				# @also	Constants
				statusViewPid = {$plugin.tx_cal_controller.view.event.meeting.statusViewPid}
	
				# @description	Template for the meeting manager view.
				# @also	Constants
				managerTemplate = {$plugin.tx_cal_controller.view.event.meeting.managerTemplate}
	
				# @description	The time in seconds meetings without a status shall be displayed
				lookingAhead = 300000;
			}
			
			todo < plugin.tx_cal_controller.view.event.event
			todo {
				# @description	Content object that defines how a link to a todo is rendered.
				# @also	plugin.tx_cal_controller.view.event.event.eventLink
				todoLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				
				# @description	Content object for the todo status
				status = TEXT
				status {
					required = 1
					current = 1
					wrap = <div>%%%STATUS_LABEL%%%:&nbsp; |</div>
				}
				
				# @description	Content object for the todo priority
				priority = TEXT
				priority {
					required = 1
					current = 1
					wrap = <div>%%%PRIORITY_LABEL%%%:&nbsp; |</div>
				}
				
				# @description	Content object for the todo completed
				completed = TEXT
				completed {
					required = 1
					current = 1
					wrap = <div>%%%COMPLETED_LABEL%%%:&nbsp; |</div>
				}
			}
		}
		title {
			event < plugin.tx_cal_controller.view.event.event
			event {
				title.dataWrap >
			}
		}
		
		notification {
			event < plugin.tx_cal_controller.view.event.event
			event {
				location.typolink >
				organizer.typolink >
			}
		}
		
		todo {
			todoInlineModelTemplate = {$plugin.tx_cal_controller.view.todo.todoInlineModelTemplate}
			todoSeparateModelTemplate = {$plugin.tx_cal_controller.view.todo.todoSeparateModelTemplate}
			
			todo < plugin.tx_cal_controller.view.event.todo
			event < plugin.tx_cal_controller.view.event.todo
		}

		location {
			# @description	Page to display the location view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			locationViewPid =

			# @description	Page view configured for creating an location. If this is not configured,
			#				then the current page will be used instead.
			createLocationViewPid = 

			# @description	Page view configured for editing an location. If this is not configured,
			#				then the current page will be used instead.
			editLocationViewPid = 

			# @description	Page view configured for deleting an location. If this is not configured,
			#				then the current page will be used instead.
			deleteLocationViewPid = 

			# @description	Template for generic location view.
			# @also			Constants
			locationTemplate = {$plugin.tx_cal_controller.view.location.locationTemplate}
			
			# @description	Template for generic location model.
			# @also			Constants
			locationModelTemplate = {$plugin.tx_cal_controller.view.location.locationModelTemplate}

			# @description	Template for location model when using the partner framework.
			# @also			Constants
			locationModelTemplate4Partner = {$plugin.tx_cal_controller.view.location.locationModelTemplate4Partner}

			# @description	Template for location model when using tt_address.
			# @also			Constants
			locationModelTemplate4Address = {$plugin.tx_cal_controller.view.location.locationModelTemplate4Address}

			# @description	Maximum date to search for events in the future
			maxDate = 20130101

			# @description	Minimum date to search for events in the past
			minDate = 00000001

			# @description	Maximum number of instances of a recurring event that should be listed.
			# @also			FlexForm
			maxRecurringEvents = 
			
			# @description	Sets the location title as page title
			substitutePageTitle = 1

		
			# @description	rendering definitons for events displayed/listed in location view. By default, there are only the fields configured, that are provided by the default templates.
			# 					If you would like to have the same rendering settings for events available than in the event view, then uncomment the next line.
			# event < plugin.tx_cal_controller.view.event.event
			event {
				dateFormat = {$plugin.tx_cal_controller.view.dateFormat}
				timeFormat = {$plugin.tx_cal_controller.view.timeFormat}
				startdate =< plugin.tx_cal_controller.view.list.event.startdate
				enddate =< plugin.tx_cal_controller.view.list.event.enddate
				starttime =< plugin.tx_cal_controller.view.list.event.starttime
				endtime =< plugin.tx_cal_controller.view.list.event.endtime
			}

			location {

				# @description	Enables the rendering of the wec_map.
				# @also			Constants
				showMap = {$plugin.tx_cal_controller.view.location.showMap}
	
				map {
					# @description	API Key for Google Maps.
					# @see	http://www.google.com/apis/maps/signup.html
					apiKey =
		
					# @description	Width of the map.
					mapWidth = 300
		
					# @description	Height of the map.
					mapHeight = 300
		
					# @description	Possible control sizes for the map.  Options are large, small, zoomonly, and none.
					controlSize = small
		
					# @description	Boolean defining whether overview map should be shown.
					showOverviewMap = 0
		
					# @description	Boolean defining whether the map type control should be shown.
					showMapType = 0
		
					# @description	Boolean definine whether the scale should be shown.
					showScale = 0
		
					# @description	Boolean defining whether the info window should be opened when the page loads.
					showInfoOnLoad = 0
		
					# @description	Boolean defining whether directions should be available.
					showDirections = 1
		
					# @description	Boolean defining whether written directions should be shown in addition to the map.
					showWrittenDirections = 1
		
					# @description	Boolean defining whether an address should be prefilled for logged in users.
					prefillAddress = 1
		
					# @description	Default zoom level. If not set, autozoom will be used.
					zoomLevel = 
		
					# @description	Default center latitude. If not set, autocenter will be used.
					centerLat = 
		
					# @description	Default center longitude. If not set, autocenter will be used.
					centerLong = 
		
				}
	
				# @description	Content object for location name
				name = TEXT
				name {
					current = 1
					required = 1
					dataWrap = <div>%%%NAME_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location street
				street = TEXT
				street {
					current = 1
					required = 1
					dataWrap = <div>%%%STREET_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location city
				city = TEXT
				city {
					current = 1
					required = 1
					dataWrap = <div>%%%CITY_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location zip
				zip = TEXT
				zip {
					current = 1
					required = 1
					dataWrap = <div>%%%ZIP_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location phone number
				phone = TEXT
				phone {
					current = 1
					required = 1
					dataWrap = <div>%%%PHONE_LABEL%%%:&nbsp; |</div>
				}
				
				# @description	Content object for location facsimile number
				fax = TEXT
				fax {
					current = 1
					required = 1
					dataWrap = <div>%%%FAX_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location countryzone
				countryzone = TEXT
				countryzone {
					current = 1
					required = 1
					dataWrap = <div>%%%COUNTRYZONE_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location countryzoneStaticInfo
				countryzoneStaticInfo = TEXT
				countryzoneStaticInfo {
					current = 1
					required = 1
					ifEmpty.field = countryzone
					dataWrap = <div>%%%COUNTRYZONE_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location country
				country = TEXT
				country {
					current = 1
					required = 1
					dataWrap = <div>%%%COUNTRY_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location countryStaticInfo
				countryStaticInfo = TEXT
				countryStaticInfo {
					current = 1
					required = 1
					ifEmpty.field = country
					dataWrap = <div>%%%COUNTRY_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location description
				description =< tt_content.text.20
				description {
					field = description
					required = 1
					dataWrap = <div>%%%DESCRIPTION_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object for location email
				email = TEXT
				email {
					current = 1
					typolink.parameter.current = 1
					required = 1
					dataWrap = <div>%%%EMAIL_LABEL%%%:&nbsp; |</div>
			    }
			    
			    # @description	Content object for location link
			    link < .email
			    link {
			    	dataWrap = <div>%%%LINK_LABEL%%%:&nbsp; |</div>
			    }
			    
			    # @description	Content object for location image
				image =< plugin.tx_cal_controller.view.event.event.image
	
				# @description	Displays location related events
				includeEventsInResult = 1
				
				includeEventsInResult {
					# @description	Shows the events in a reverse order
					reverse = 0
					
					starttime = now
					endtime = +3 month
				}
	
				# @description	Content object for location event link
				eventLink = TEXT
				eventLink {
					current = 1
					dataWrap = <div>%%%RELATEDEVENTS_LABEL%%%:&nbsp; |</div>
				}
	
				# @description	Content object if no location has been found
				noLocationFound = TEXT
				noLocationFound {
					dataWrap = %%%NO_LOCATION_RESULTS%%%
				}
	
				# @description	Image tag for icon used in link to frontend editing of a location.
				editIcon = <img src="###IMG_PATH###/edit.gif" border="0"/>
	
				# @description	Image tag for icon used in link to frontend creation of a location.
				addIcon = <img src="###IMG_PATH###/add_small.png" border="0"/>
	
				# @description	Image tag for icon used in link to frontend deletion of a location.
				deleteIcon = <img src="###IMG_PATH###/delete.gif" border="0"/>

				# @description	Configuration for the add location link. Default setting is to act backwards compatible, but it can be altered with TS
				addLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				addLink {
					typolink.title.override.override.dataWrap = %%%CREATE_LOCATION%%%
				}

				# @description	Configuration for the edit location link. Default setting is to act backwards compatible, but it can be altered with TS
				editLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				editLink {
					typolink.title.override.override.dataWrap = %%%EDIT_LOCATION%%%
				}
	
				# @description	Configuration for the delete location link. Default setting is to act backwards compatible, but it can be altered with TS
				deleteLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				deleteLink {
					typolink.title.override.override.dataWrap = %%%DELETE_LOCATION%%%
				}
			}
		}

		organizer {
			# @description	Page to display the week view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			organizerViewPid =

			# @description	Page view configured for creating an organizer. If this is not configured,
			#				then the current page will be used instead.
			createOrganizerViewPid = 

			# @description	Page view configured for editing an organizer. If this is not configured,
			#				then the current page will be used instead.
			editOrganizerViewPid = 

			# @description	Page view configured for deleting an organizer. If this is not configured,
			#				then the current page will be used instead.
			deleteOrganizerViewPid = 

			# @description	Template for generic organizer view.
			# @also			Constants
			organizerTemplate = {$plugin.tx_cal_controller.view.organizer.organizerTemplate}
			
			# @description	Template for generic organizer model.
			# @also			Constants
			organizerModelTemplate = {$plugin.tx_cal_controller.view.organizer.organizerModelTemplate}

			# @description	Template for organizer model when using the partner framework.
			# @also			Constants
			organizerModelTemplate4Partner = {$plugin.tx_cal_controller.view.organizer.organizerModelTemplate4Partner}

			# @description	Template for organizer model when using tt_address.
			# @also			Constants
			organizerModelTemplate4Address = {$plugin.tx_cal_controller.view.organizer.organizerModelTemplate4Address}

			# @description	Template for organizer model when using fe_users.
			# @also			Constants
			organizerModelTemplate4FEUser = {$plugin.tx_cal_controller.view.organizer.organizerModelTemplate4FEUser}

			# @description	Maximum number of instances of a recurring event that should be listed.
			# @also			FlexForm
			maxRecurringEvents = 

			# @description	Maximum date to search for events in the future
			maxDate = 20130101

			# @description	Minimum date to search for events in the past
			minDate = 00000001
			
			# @description	rendering definitons for events displayed/listed in organizer view. By default, there are only the fields configured, that are provided by the default templates.
			# 					If you would like to have the same rendering settings for events available than in the event view, then uncomment the next line.
			# event < plugin.tx_cal_controller.view.event.event
			event {
				dateFormat = {$plugin.tx_cal_controller.view.dateFormat}
				timeFormat = {$plugin.tx_cal_controller.view.timeFormat}
				startdate =< plugin.tx_cal_controller.view.list.event.startdate
				enddate =< plugin.tx_cal_controller.view.list.event.enddate
				starttime =< plugin.tx_cal_controller.view.list.event.starttime
				endtime =< plugin.tx_cal_controller.view.list.event.endtime
			}

			organizer < plugin.tx_cal_controller.view.location.location
			organizer {
				# @description	Relevant to partner framework.
				contactInfoType = 1
	
				noOrganizerFound = TEXT
				noOrganizerFound {
					dataWrap = %%%NO_ORGANIZER_RESULTS%%%
				}

				addLink {
					typolink.title.override.override.dataWrap = %%%CREATE_ORGANIZER%%%
				}

				editLink {
					typolink.title.override.override.dataWrap = %%%EDIT_ORGANIZER%%%
				}
	
				deleteLink {
					typolink.title.override.override.dataWrap = %%%DELETE_ORGANIZER%%%
				}

			}

		}
		

		calendar {
			# @description	Page view configured for creating an calendar. If this is not configured,
			#				then the current page will be used instead.
			createCalendarViewPid = 

			# @description	Page view configured for editing an calendar. If this is not configured,
			#				then the current page will be used instead.
			editCalendarViewPid = 

			# @description	Page view configured for deleting an calendar. If this is not configured,
			#				then the current page will be used instead.
			deleteCalendarViewPid = 
			
			# @description	The distance for events in a nearby calendar
			# @also flexform 
			nearbyDistance = 50
			
			nearbyAdditionalTable = tx_cal_location
			nearbyAdditionalWhere = AND tx_cal_calendar.nearby = 1 AND tx_cal_event.location_id > 0 AND tx_cal_event.location_id = tx_cal_location.uid AND 6367.41*SQRT(2*(1-cos(RADIANS(tx_cal_location.latitude))*cos(RADIANS(###LATITUDE###))*(sin(RADIANS(tx_cal_location.longitude))*sin(RADIANS(###LONGITUDE###))+cos(RADIANS(tx_cal_location.longitude))*cos(RADIANS(###LONGITUDE###)))-sin(RADIANS(tx_cal_location.latitude))*sin(RADIANS(###LATITUDE###)))) <= ###DISTANCE###

			calendar {
				# @description	Image tag for icon used in link to frontend creation of a calendar.
				# @see			plugin.tx_cal_controller.view.addIcon
				addIcon = <img src="###IMG_PATH###/create_calendar.gif" border="0"/>
	
				# @description	Image tag for icon used in link to frontend editing of a calendar.
				editIcon = <img src="###IMG_PATH###/edit.gif" border="0"/>
	
				# @description	Image tag for icon used in link to frontend deletion of a calendar.
				deleteIcon = <img src="###IMG_PATH###/delete.gif" border="0"/>
	
				# @description	Configuration for the add calendar link. Default setting is to act backwards compatible, but it can be altered with TS
				addLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				addLink {
					typolink.title.override.override.dataWrap = %%%CREATE_CALENDAR%%%
				}
	
				# @description	Configuration for the edit calendar link. Default setting is to act backwards compatible, but it can be altered with TS
				editLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				editLink {
					typolink.title.override.override.dataWrap = %%%EDIT_CALENDAR%%%
				}
	
				# @description	Configuration for the delete calendar link. Default setting is to act backwards compatible, but it can be altered with TS
				deleteLink =< plugin.tx_cal_controller.view.defaultLinkSetup
				deleteLink {
					typolink.title.override.override.dataWrap = %%%DELETE_CALENDAR%%%
				}
			}
		}
		category {
			# @description	Page view configured for creating a category. If this is not configured,
			#				then the current page will be used instead.
			createCategoryViewPid = 

			# @description	Configuration for the category view link.
			categoryViewLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup

			# @description	Page view configured for editing a category. If this is not configured,
			#				then the current page will be used instead.
			editCategoryViewPid = 

			# @description	Page view configured for deleting a category. If this is not configured,
			#				then the current page will be used instead.
			deleteCategoryViewPid = 
			
			# @description	Notification email adresses can be configured per category.
			notify {
				# @description	Template for email notification if an event is created.
				# @also	Constants
				all.onCreateTemplate = {$plugin.tx_cal_controller.view.event.notify.all.onCreateTemplate}
	
				# @description	Template for email notification if an event has been changed.
				# @also	Constants
				all.onChangeTemplate = {$plugin.tx_cal_controller.view.event.notify.all.onChangeTemplate}
	
				# @description	Template for email notification if an event has been deleted.
				# @also	Constants
				all.onDeleteTemplate = {$plugin.tx_cal_controller.view.event.notify.all.onDeleteTemplate}
	
				# @description	Title for notification emails on create.
				all.onCreateEmailTitle = The event ###TITLE### has been created
	
				# @description	Title for notification emails on change.
				all.onChangeEmailTitle = The event ###TITLE### has been changed
	
				# @description	Title for notification emails on delete.
				all.onDeleteEmailTitle = The event ###TITLE### has been deleted
			}

			category {
				# @description	Defines the default header style
				defaultHeaderStyle = default_catheader
	
				# @description	Defines the default body style
				defaultBodyStyle = default_catbody
			}
			tree {
				# @description	Defines the calendars shown in the tree (csv of ids)
				calendar =
	
				# @description	Defines the categories shown in the tree (csv of ids)
				category =
	
				# @description	Content object to render the calendar title
				calendarTitle = TEXT
				calendarTitle {
				}
	
				# @description	Content object to render each root element of the tree
				rootElement = TEXT
				rootElement {
					wrap = <table class="treelevel0"><tr><td>|</td></tr></table>
				}
	
				# @description	Content object to render the selector
				selector = TEXT
				selector {
					wrap = <input type="checkbox" name="tx_cal_controller[category][]" value="###UID###" | />
				}
	
				# @description	Defines a root node of the tree
				element = <span class="###HEADERSTYLE###_bullet ###HEADERSTYLE###_legend_bullet" >&bull;</span><span class="###HEADERSTYLE###_text">###TITLE###</span>
	
				# @description	Defines an element if the tree has no nodes
				emptyElement = <br/><br/>
	
				# @description	Defines a sub node of the tree
				subElement = <br /><table class="treelevel###LEVEL###" id="treelevel###UID###">
	
				# @description	Defines a wrap for sub node of the tree
				subElement_wrap {
					wrap = <tr><td>|</td></tr>
				}
	
				# @description	Defines the trailer for a branch level
				subElement_pre = </table>

				# @description	Defines the submit button
				categorySelectorSubmit = <input type="image" class="refresh_calendar" src="###IMG_PATH###/refresh.gif" alt="%%%REFRESH_LABEL%%%" title="%%%REFRESH_LABEL%%%">
				
				# @description	Alternative rendering of a category selection menu
				#				To activate this rendering unset selector (plugin.tx_cal_controller.view.category.selector >)
				alternativeSelect = CASE
				alternativeSelect {
					key.data = field:cur
					default = TEXT
					default {
						current = 1
						typolink {
							parameter.data = TSFE:id
							additionalParams = &tx_cal_controller[category]={field:uid}
							additionalParams.insertData = 1
							wrap = <li>|</li>
						}
					}
					1 = TEXT
					1 {
						current = 1
						wrap = <li class="cur"><em>|</em></li>
					}
				}
			}
		}
		day {
			# @description	Page to display the day view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			dayViewPid =

			# @description	Configuration for the day view link.
			dayViewLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup

			# @description	Configuration for the next day link.
			nextDayLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			nextDayLink {
				typolink.title.override.override.dataWrap = %%%NEXT_DAY%%%
			}

			# @description	Configuration for the next day link displayed in the legend.
			legendNextDayLink < .nextDayLink

			# @description	Configuration for the previous day link.
			prevDayLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			prevDayLink {
				typolink.title.override.override.dataWrap = %%%LAST_DAY%%%
			}

			# @description	Configuration for the next day link displayed in the legend.
			legendPrevDayLink < .prevDayLink


			# @description	Start time for the day view.
			# @also			FlexForm
			dayStart = 0700

			# @description	End time for the day view.
			# @also			FlexForm
			dayEnd = 2300

			# @description	Cuts off empty times before the first and after the last event of a day.
			dynamic = 0

			# @description	Length of time in minutes for each grid on the day view. Should be evenly
			#				divisible into 60 minutes (ex. 15,30,60)
			# @also			FlexForm
			gridLength = 15

			# @description	Corrects the starting point to search for events. If you only have the dayview to display you can leave it to 0, but if you have e.g. a month also in your dayview, you should enter a value in seconds, so the month will be filled with events too - not only the one day
			startPointCorrection = 5616000

			# @description	Same as startingPointCorrection but for the end point
			endPointCorrection = 5616000

			# @description	Template for the day view.
			# @also			Constants
			dayTemplate = {$plugin.tx_cal_controller.view.day.dayTemplate}

			# @description	Arrow image within the legend for going back to the previous day.
			legendPrevDayLink = <img src="###IMG_PATH###/left_arrows.gif" width="16" height="20" border="0" align="left" />

			# @description	Arrow image within the legend for going forward to the next day.
			legendNextDayLink = <img src="###IMG_PATH###/right_arrows.gif" width="16" height="20" border="0" align="right" />

			# @description	Cell containing the time
			dayTimeCell = <tr><td rowspan="%s" align="center" valign="top" width="60" class="timeborder">%s</td><td bgcolor="#a1a5a9" width="1" height='%s'></td>

			# @description	Cell inbetween time and the day table
			dayTimeCell2 = <tr><td bgcolor="#a1a5a9" width="1" height="%s"></td>

			# @description	Pre event wrap
			dayEventPre = <td rowspan="%s" align="left" valign="top"

			# @description	Post event wrap
			dayEventPost = </td>

			# @description	Major time divider in day view.  By default, this is the solid line every 30 minutes.
			classDayborder = class="dayborder"

			# @description	Minor time divider in day view.  By default, this is the dotted line every 15 minutes.
			classDayborder2 = class="dayborder2"

			# @description	Wrap for a single cell in day view.
			normalCell = <td colspan="%s" %s>%s&nbsp;</td>

			# @description	Final element for a row in day view.
			dayFinishRow = </tr>

			# @description	Date format for weeks within day view.
			dateFormatWeekList = %A, %b %d

			# @description	Date format of the day displayed at the top of the view.
			dateFormatDay = %a, %b %d

			# @description	Time format for hours shown within the day view.
			timeFormatDay = {$plugin.tx_cal_controller.view.timeFormat}

			# @description	Formats the week title
			titleWrap = COA
			titleWrap.1 = TEXT
			titleWrap.1 {
				data = register:cal_day_starttime
				strftime = {$plugin.tx_cal_controller.view.dateFormat}
			}
	#		titleWrap.3 = TEXT
	#		titleWrap.3 {
	#			data = register:cal_day_starttime
	#			date = W
	#			wrap = &nbsp;(WK |)
	#		}

			event < plugin.tx_cal_controller.view.event.event
			event {
	
				# @description	Content object for the event title of an all day event.
				alldayTitle = TEXT
				alldayTitle {
					crop = 15|..
					dataWrap >
				}

				# @description	Content object for the event title.
				title {
					dataWrap >
				}
	
				# @description	Content object for the event start time.
				starttime {
					dataWrap >
				}
	
				# @description	Content object for the event end time.
				endtime {
					required = 1
					dataWrap >
				}
			}
			todo < plugin.tx_cal_controller.view.event.todo
			todo {	
				# @description	Content object for the todo completed.
				completed {
					current = 1
					wrap = &nbsp;(|%)
				}
			}

			# @description	Hide past events; 0=Hide nothing; 1=Hide all old events; 2=Hide old events except today
			dontShowOldEvents = 0
		}

		week {
			# @description	Page to display the week view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			weekViewPid =

			# @description	Configuration for the day view link.
			weekViewLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup

			# @description	Configuration for the next week link.
			nextWeekLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			nextWeekLink {
				typolink.title.override.override.dataWrap = %%%NEXT_WEEK%%%
			}

			# @description	Configuration for the previous week link.
			prevWeekLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			prevWeekLink {
				typolink.title.override.override.dataWrap = %%%LAST_WEEK%%%
			}

			# @description	Configuration for the next day link.
			# @see			plugin.tx_cal_controller.view.day.nextDayLink
			nextDayLink < plugin.tx_cal_controller.view.day.nextDayLink

			# @description	Configuration for the next day link displayed in the legend.
			# @see			plugin.tx_cal_controller.view.day.legendNextDayLink
			legendNextDayLink < plugin.tx_cal_controller.view.day.legendNextDayLink

			# @description	Configuration for the previous day link.
			# @see			plugin.tx_cal_controller.view.day.prevDayLink
			prevDayLink < plugin.tx_cal_controller.view.day.prevDayLink

			# @description	Configuration for the next day link displayed in the legend.
			# @see			plugin.tx_cal_controller.view.day.legendPrevDayLink
			legendPrevDayLink < plugin.tx_cal_controller.view.day.legendPrevDayLink

			# @description	Corrects the starting point to search for events. If you only have the weekview to display you can leave it to 0, but if you have e.g. a month also in your weekview, you should enter a value in seconds, so the month will be filled with events too - not only the onw week
			#	
			startPointCorrection = 5616000

			# @description	Same as startingPointCorrection but for the end point
			endPointCorrection = 5616000

			# @description	Cuts off empty times before the earliest and latest event of a week.
			dynamic = 0

			# @description	Template for the week view.
			# @also			Constants
			weekTemplate = {$plugin.tx_cal_controller.view.week.weekTemplate}

			# @description	Row for a full hour.
			weekDisplayFullHour = <tr><td colspan="4" rowspan="%s" align="center" valign="top" width="60" class="timeborder">%s</td><td bgcolor="#a1a5a9" width="1" height="%s"></td>

			# @description	Cells within the weekDisplayFullHour
			# @see	plugin.tx_cal_controller.view.week.weekDisplayFullHour
			weekDisplayInbetween = <tr><td bgcolor="#a1a5a9" width="1" height="%s"></td>

			# @description	Wrap around each weekday title.
			weekday_stdWrap {
				wrap = <span class="V9BOLD">|</span>
			}

			# @description	Major time divider in day view.  By default, this is the dotted line every 15 minutes.
			classWeekborder = class="weekborder"

			# @description	Pre event wrap.
			# @see			plugin.tx_cal_controller.view.day.dayEventPre	
			weekEventPre < plugin.tx_cal_controller.view.day.dayEventPre

			# @description	Post event wrap.
			# @see			plugin.tx_cal_controller.view.day.dayEventPost
			weekEventPost < plugin.tx_cal_controller.view.day.dayEventPost

			# @description	Wrap for a single cell in week view.
			# @see			plugin.tx_cal_controller.view.day.normalCell
			normalCell < plugin.tx_cal_controller.view.day.normalCell

			# @description	Final element for a row in week view.
			# @see			plugin.tx_cal_controller.view.day.dayFinishRow
			weekFinishRow < plugin.tx_cal_controller.view.day.dayFinishRow

			# @description	Date format for weeks within week view.
			dateFormatWeekList = %a, %b %d
            
			# @description	Date format for week show at the top of view.
			dateFormatWeek = {$plugin.tx_cal_controller.view.dateFormat}
            
			# @description	Time format for hours shown within the week view.
			timeFormatWeek = {$plugin.tx_cal_controller.view.timeFormat}
            
			# @description	Arrow image within the legend for going back to the previous day.
            legendPrevDayLink = <img src="###IMG_PATH###/left_arrows.gif" alt="%%%PREV%%%" class="nextweek_arrow" />
            
			# @description	Arrow image within the legend for going forward to the next day.
			legendNextDayLink = <img src="###IMG_PATH###/right_arrows.gif" alt="%%%NEXT%%%" class="previousweek_arrow" />

			# @description	Formats the week title
			titleWrap = COA
			titleWrap.1 = TEXT
			titleWrap.1 {
				data = register:cal_week_starttime
				strftime = {$plugin.tx_cal_controller.view.dateFormat}
			}
			titleWrap.2 = TEXT
			titleWrap.2 {
				data = register:cal_week_endtime
				wrap = &nbsp;-&nbsp;|
				strftime = {$plugin.tx_cal_controller.view.dateFormat}
			}
	#		titleWrap.3 = TEXT
	#		titleWrap.3 {
	#			data = register:cal_week_starttime
	#			date = W
	#			wrap = &nbsp;(WK |)
	#		}
	
			event < plugin.tx_cal_controller.view.day.event
			todo < plugin.tx_cal_controller.view.day.todo

			# @description	Hide past events; 0=Hide nothing; 1=Hide all old events; 2=Hide old events except today
			dontShowOldEvents = 0
		}

		month {
			# @description	Page to display the month view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			monthViewPid =

			# @description	Configuration for the month view link.
			monthViewLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup

			# @description	Corrects the starting point to search for events. If you only have only one month in your view to display you can leave it to 0, but if you have e.g. a small months also in your view, you should enter a value in seconds, so the other months will be filled with events too
			#				60*60*24*35
			startPointCorrection = 3024000

			# @description	Same as startingPointCorrection but for the end point
			endPointCorrection = 3024000

			# @description	Template for the month view
			# @also			Constants
			monthTemplate = {$plugin.tx_cal_controller.view.month.monthTemplate}

			# @description	Template for a small month
			# @also			Constants
			monthSmallTemplate = {$plugin.tx_cal_controller.view.month.monthSmallTemplate}

			# @description	Template for a medium month, like in the year view
			# @also			Constants
			# @see			tx_cal_controller.view.year.yearTemplate
			monthMediumTemplate = {$plugin.tx_cal_controller.view.month.monthMediumTemplate}

			# @description	Template for a large month as it is in the default month view
			# @also			Constants
			monthLargeTemplate = {$plugin.tx_cal_controller.view.month.monthLargeTemplate}

			# @description	Template for a mini month as it is in the mini month view
			monthMiniTemplate = ###MONTH_SMALL|+0###

			# @description	Enable this to create a single small calendar
			# @also			FlexForm
			monthMakeMiniCal = 0
			
			# @description	Enables the horizontal sidebar
			navigation = 1

			# @description	Template for a navigation bar in the month view
			# @also			Constants
			horizontalSidebarTemplate = {$plugin.tx_cal_controller.view.month.horizontalSidebarTemplate}

			# @description	Show this month's events in a list view. This is only applicable for templates that contain the ###LIST### marker, such as the default large month template. In the standard configuration, mini calendars do not support a list view.
			# @also			FlexForm
			showListInMonthView = 0
			
			# @description	If you show the month's events in a list view (see setting 'showListInMonthView'), then you can configure here from which view the rendering settings for the events should be used. By default it's the regular listView rendering, but you might want to use settings from a different view.
			useListEventRenderSettingsView = list

			# @description	Date format for month shown at top of view.
            dateFormatMonth = %B
            
            # @description  Date format for each single day shown.
			dateFormatDay = %d
            
            # @description	Date format for weekdays in small month.
            weekdayFormatSmallMonth = %a
            
            # @description	Max length of weekdays names in small month. 0 = full length
            weekdayLengthSmallMonth = 2
            
            # @description	Date format for weekdays in medium (year) month.
            weekdayFormatMediumMonth = %a
            
            # @description	Max length of weekdays names in medium (year) month. 0 = full length
            weekdayLengthMediumMonth = 0
            
            # @description	Date format for weekdays in large month.
            weekdayFormatLargeMonth = %A
            
            # @description	Max length of weekdays names in large month. 0 = full length
            weekdayLengthLargeMonth = 0

			# @description	Wrap for all day events and standard events in small month view.
			smallLink_stdWrap {
				wrap = <span class="bold">|</span>
			}

			largeLink_stdWrap < .smallLink_stdWrap

			# @description	Configuration for the next month link.
			nextMonthLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			nextMonthLink {
				typolink.title.override.override.dataWrap = %%%NEXT_MONTH%%%
			}

			# @description	Configuration for the previous month link.
			prevMonthLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			prevMonthLink {
				typolink.title.override.override.dataWrap = %%%LAST_MONTH%%%
			}

			# @description	Additional styling for small month view.
			monthSmallStyle = monthSmallBasic

			# @description	Additional styling for medium month view.
			monthMediumStyle = monthMediumBasic

			# @description	Additional styling for large month view.
			monthLargeStyle = monthLargeBasic

			# @description	CSS class for days not in the current month.
			monthOffStyle = monthOff

			# @description	CSS class for the selected day in the current month (ie. today).
			monthSelectedStyle = monthSelected
			
			# @description CSS class for the selected week in the current month
			monthSelectedWeekStyle = monthSelectedWeek

			# @description CSS class for a day in the selected week of the current month (ie. today).
			monthDaySelectedWeekStyle = monthSelectedWeek

			# @description	CSS class for the weekend in the month.
			monthWeekendStyle = monthWeekend

			# @description	CSS class for a weekend day (ie. today).
			monthWeekendStyle = monthWeekend

			# @description	CSS class for today in the current month.
			monthTodayStyle = monthToday

			# @description	CSS class for the current week in the current month.
			monthCurrentWeekStyle = monthCurrentWeek

			# @description	CSS class for a day in the current week in the current month.
			monthDayCurrentWeekStyle = monthCurrentWeek

			# @description	CSS class for the upper left corner in a month
			monthCornerStyle = monthCorner
			
			# @description CSS class that adds the weekday number to each day, where sunday = 0 and monday to saturday = 1-6. Doesn't take care of the TS setting 'weekStartDay' yet.
			monthDayOfWeekStyle = cal_day%s

			# @description	CSS class for a day containing an event.
			eventDayStyle = eventDay

			# @description CSS class for a week containing an event
			monthWeekWithEventStyle = monthWeekWithEvent
			
			displayDate = TEXT
			displayDate {
				current = 1
				strftime = %B %Y
			}

			# @description	Formats the list title
			heading = COA
			heading.1 = TEXT
			heading.1 {
				data = register:cal_list_starttime
				strftime = {$plugin.tx_cal_controller.view.dateFormat}
			}
			heading.2 = TEXT
			heading.2 {
				data = register:cal_list_endtime
				wrap = &nbsp;-&nbsp;|
				strftime = {$plugin.tx_cal_controller.view.dateFormat}
			}

			event < plugin.tx_cal_controller.view.day.event
			event {
				noEventFound >
				
				# @description	Content object of the event title
				title {
					crop = 11|..
				}
			}
			
			todo < plugin.tx_cal_controller.view.day.todo

			# @description	Hide past events; 0=Hide nothing; 1=Hide all old events; 2=Hide old events except today
			dontShowOldEvents = 0
		}

		year {
			# @description	Page to display the year view on. If this is not configured, then the
			#				current page will be used instead.
			# @also			FlexForm
			yearViewPid =

			# @description	Configuration for the year view link.
			yearViewLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup

			# @description	Corrects the starting point to search for events. If the year ends on a monday and you want to have the rest of the weekdays filled
			#				60*60*24*6
			startPointCorrection = 518400

			# @description	Same as startingPointCorrection but for the end point
			endPointCorrection = 518400

			# @description	Template for the year view.
			# @also			Constants
			yearTemplate = {$plugin.tx_cal_controller.view.year.yearTemplate}
			
			# @description	Configuration for the next year link.
			nextYearLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			nextYearLink {
				typolink.title.override.override.dataWrap = %%%NEXT_YEAR%%%
			}

			# @description	Configuration for the previous year link.
			prevYearLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			prevYearLink {
				typolink.title.override.override.dataWrap = %%%LAST_YEAR%%%
			}

			event < plugin.tx_cal_controller.view.month.event

			# @description	Hide past events; 0=Hide nothing; 1=Hide all old events; 2=Hide old events except today
			dontShowOldEvents = 0
		}

		list {
			# @description	Template for list view.
			# @also			Constants
			listTemplate = {$plugin.tx_cal_controller.view.list.listTemplate}

			# @description	Template for list view with teaser.
			# @also			Constants
			listWithTeaserTemplate = {$plugin.tx_cal_controller.view.list.listWithTeaserTemplate}
			
			# @description	Array that is holding the information how many alternating layouts should be used for rendering the events and which marker suffix should be used for fetching the according layout subpart. Each defined marker suffix has stdWrap properties.
			alternatingLayoutMarkers {
				odd = LIST_ODD
				even = LIST_EVEN
			}

			# @description Restarts the alternation of the layouts after each day, when enableDayWrapper is used.
			# @also	enableDayWrapper
			restartAlternationAfterDayWrapper = 0

			# @description Restarts the alternation of the layouts after each week, when enableWeekWrapper is used.
			# @also	enableWeekWrapper
			restartAlternationAfterWeekWrapper = 0

			# @description Restarts the alternation of the layouts after each month, when enableMonthWrapper is used.
			# @also	enableMonthWrapper
			restartAlternationAfterMonthWrapper = 0

			# @description Restarts the alternation of the layouts after each year, when enableYearWrapper is used.
			# @also	enableYearWrapper
			restartAlternationAfterYearWrapper = 0

			# @description	Configuration for the list view link.
			listViewLink =< plugin.tx_cal_controller.view.defaultViewLinkSetup

			# @description	Show events from this date.
			# @also			FlexForm
			starttime = now

			# @description	Show events until this date.
			# @also			FlexForm
			endtime = +1 month
			
			# @description	listing Order of the events (asc|desc)
			order = asc
			
			# @description	Hides events that are already started: multiple day events
			hideStartedEvents = 0

			# @description	Ignores the starttime and endtime value and displays all events of the getdate day.
			useGetdate = 0

			# @description	Ignores the getdate option if there is no "getdate" parameter in the url
			doNotUseGetdateTheFirstTime = 0

			# @description	Defines the view.list.starttime as starttime relative to the date given in parameter getdate (like start of selected year,...)
			useCustomStarttime = 0

			# @description	Defines the view.list.endtime as endtime for the list starting with the parameter getdate
			useCustomEndtime = 0

			# @description	If set, the option "useCustomStarttime" will be calculated relative to the given getdate and not to the current date. 
			#					That means that if you set your starttime to "yearbegin" and the getdate-parameter is somewhere in 2014, your starttime would be 01-01-2014
			# @also useCustomStarttime
			customStarttimeRelativeToGetdate = 0

			# @description	If set, the option "useCustomEndtime" will be calculated relative to the given getdate and not to the current date. 
			#					That means that if you set your endtime to "yearend" and the getdate-parameter is somewhere in 2014, your endtime would be 12-31-2014
			# @also useCustomEndtime
			customEndtimeRelativeToGetdate = 0

			# @description	Maximum number of events to display.
			# @also			FlexForm
			maxEvents = 100

			# @description	Maximum number of instances of a recurring event that should be listed.
			# @also			FlexForm
			maxRecurringEvents = 

			# @description	Image tag for icon used in link to frontend creation of an event.
			# @see			plugin.tx_cal_controller.view.day.addIcon
			addIcon < plugin.tx_cal_controller.view.day.addIcon

			# @description	StdWrap for found result text
			found_stdWrap {
				noTrimWrap = |<p class="found">| %%%SEARCH_FOUND%%%</p>|
		   }
		    
			# @description	Formats the list title
			heading = COA
			heading {
				1 = TEXT
				1 {
					data = register:cal_list_starttime
					strftime = {$plugin.tx_cal_controller.view.dateFormat}
				}
				2 = TEXT
				2 {
					data = register:cal_list_endtime
					wrap = &nbsp;-&nbsp;|
					required = 1
					strftime = {$plugin.tx_cal_controller.view.dateFormat}
				}
			}

			# @description	Enables separation of different days in the list view
			enableDayWrapper = 0
            
			# @description	Format for the day wrapper
			dayWrapperFormat = %d. %B
            
			# @description	Wraps each day containing events
			dayWrapper = COA
			dayWrapper {
				10 = TEXT
				10 {
					current = 1
					required = 1
					wrap = <dt style="background-color:#CCCCCC;">|</dt>
				}
			}
			
			# @description	The outwrap end for each day
			dayWrapperEnd = TEXT
			dayWrapperEnd {
				value = 
			}

			# @description	Enables separation of different week in the list view
			enableWeekWrapper = 0

			# @description	Format for the week wrapper
			weekWrapperFormat = %U

			# @description	Wraps each week containing events
			weekWrapper < .dayWrapper
			weekWrapper.10.wrap = <dt style="background-color:#CCCCCC;">|. (Week)</dt>
			
			# @description	The outwrap end for each week
			weekWrapperEnd < .dayWrapperEnd

			# @description	Enables separation of different month in the list view
			enableMonthWrapper = 0

			# @description	Format for the month wrapper
			monthWrapperFormat = %B %Y

			# @description	Wraps each month containing events
			monthWrapper < .dayWrapper
			monthWrapper.10.wrap = <dt style="background-color:#CCCCCC;">|</dt>
			
			# @description	The outwrap end for each month
			monthWrapperEnd < .dayWrapperEnd

			# @description	Enables separation of different year in the list view. This might be only of use in some special occasions.
			enableYearWrapper = 0

			# @description	Format for the Year wrapper
			yearWrapperFormat = %Y

			# @description	Wraps each Year containing events
			yearWrapper < .monthWrapper
			
			# @description	The outwrap end for each year
			yearWrapperEnd < .dayWrapperEnd

			# @description	Enables separation of different categories
			enableCategoryWrapper = 0

			# @description	Wraps each category containing events
			categoryWrapper < .dayWrapper
			categoryWrapper.10.wrap = <dt class="###CATEGORY_STYLE###">|</dt>

			# @description	Wraps events without categories, if the categoryWrapper has been enabled
			noCategoryWrapper = TEXT
			noCategoryWrapper {
				value = <dt style="background-color:#999999;">No category</dt>
			}

			# @description	Position the noCategoryWrapper block by defining a uid (0 = before, x > largest category uid => last)
			noCategoryWrapper.uid = 999

			# @description	Enables separation of different calendars
			enableCalendarWrapper = 0

			# @description	Wraps each calendar containing events
			calendarWrapper < .dayWrapper
			calendarWrapper.10.wrap = <dt style="background-color:#000099;">|</dt>
			
			# @description	Enables a section menu for day, week, month or year wrapper
			enableSectionMenu = 0
			
			# @description	Creates a link to a page anker
			sectionMenuItem =< plugin.tx_cal_controller.view.defaultViewLinkSetup
			
			# @description	Wraps the section menu items
			sectionMenu = TEXT
			sectionMenu {
				current = 1
			}
			
			# @description	Format for the section menu
			monthSectionMenuFormat = %B

			# @description configures the pagebrowser for the list
			pageBrowser {
				# @description	The maximum number of pages that are shown in the pagebrowser
				pagesCount = 

				# @description	The maximum number of records that are shown on per page
				recordsPerPage = 10

				# @description	flag for enabling or disabling the pagebrowser
				# @also	flexform
				usePageBrowser = 1

				# @description	flag to only show the pagebrowser when the result exceeds the value defined in recordsPerPage
				onlyShowIfNeeded = 0

				# @description	here you can configure which pagebrowser should generally be used
				# possible values are: default,piPageBrowser
				useType = default

				# @description	name of the pointer that should be used to indicate resultBrowser pages
				pointer = offset

				# @description	Configures the cal build-in result browser for the list.
				default {
					# @description Wrap for the active page
					actPage_stdWrap.wrap = <span><b>|</b></span>

					# @description Rendering definition of the 'next' link
					nextLink =< plugin.tx_cal_controller.view.defaultLinkSetup
					nextLink {
						current = 0
						value = &gt;&gt;
						typolink.title.override.override.dataWrap = %%%NEXT%%%
						wrap = <span>|</span>
					}

					# @description Rendering definition of the 'prev' link, copied from 'next' link.
					prevLink < .nextLink
					prevLink {
						value = &lt;&lt;
						typolink.title.override.override.dataWrap = %%%PREV%%%
					}

					# @description Rendering definition of the 'page' links
					pageLink =< plugin.tx_cal_controller.view.defaultLinkSetup
					pageLink {
						wrap = <span>|</span>
						typolink.title.override.override.dataWrap = %%%PAGE%%% {current:1}
					}

					# @description Rendering definition for the spacer sign when stripping pages
					spacer = TEXT
					spacer {
						value = ...
						wrap = <span><b>|</b></span>
					}
				}

				# @description	Configures the TYPO3 build-in result browser for the list.
				#				This means a bar of page numbers plus a "previous" and "next" link.
				#				For each entry in the bar the piVars "pointer" will be pointing to the "result page" to show.
				piPageBrowser {
					# @description	This var can have 3 values:
					#				0: only the result-browser will be shown
					#				1: (default) the text "Displaying results..." and the result-browser will be shown.
					#				2: only the text "Displaying results..." will be shown
					showResultCount = 1
					
					# @description	Here you can choose if the pagebrowser should show texts like "page 1, page..." in the pagelinks or if it should show only numbers.
					showPBrowserText = 0
					
					# @description	If you didn't set a "browseLinksWrap" you can add parameters for the table that wraps the pagebrowser here.
					tableParams = cellpadding="2" align="center"
					
					# @description	This defines were the current page is shown in the list of pages in the pagebrowser.
					#				If this var is an integer it will be interpreted as position in the list of pages.
					#				If its value is the keyword "center" the current page will be shown in the middle of the browse links.
					pagefloat = center
					
					# @description	This is used as switch if the two links named "<< First" and "Last >>" will be shown and point to the first
					#				or last page. If "showFirstLast" is enabled "alwaysPrev" will be overwritten (set to 1).
					showFirstLast = 1
					
					# @description	This var switches the display of the pagelinks from pagenumbers to ranges f.e.: 1-5 6-10 11-15... instead of 1 2 3...
					showRange = 1
					
					# @description	A switch if the active (current) page should be displayed as pure text or as a link to itself
					dontLinkActivePage = 1
					
					# @description	If this is enabled the "previous" link will always be visible even when the first page is displayed.
					alwaysPrev = 0
					
					# @description	Here you can choose if the texts for the pagebrowser (eg: "next", "Displaying reaults...")
					#				will be parsed through the PHP function htmlspecialchars() or not. Disable this if you want
					#				to use HTML in the texts f.e. for graphical "next" and "previous" links.	
					hscText = 1
					
					# @description	This is the wrap for the complete pagebowser (results and browse links).
					browseBoxWrap = 
					
					# @description	This wraps the text "Displaying results...".
					showResultsWrap = |<br />
					
					# @description	Wrap for the browse links.
					browseLinksWrap = |
					
					# @description	Wrap for the numbers in the text: "Displaying results 1 to 4 out of 22 ".
					showResultsNumbersWrap = 
					
					# @description	Wrap for disabled links (f.e the "Last >>" link on the last page).
					disabledLinkWrap = <span style="color:#bbb;">|</span>
					
					# @description	Wrap for inactive links (normal links).
					inactiveLinkWrap = |
					
					# @description	Wrap for active links.
					activeLinkWrap = <strong>|</strong>			    
				}
			}
            
			# Configuration of the event object
			event < plugin.tx_cal_controller.view.event.event
			event {
				# @description	Content object for the event start time
				starttime {
					dataWrap >
				}
	
				# @description	Content object for the event end time
				endtime {
					noTrimWrap = | - ||
					required = 1
					dataWrap >
				}
	
				# @description	Content object for the event start date
				startdate {
					dataWrap >
				}
	
				# @description	Content object for the event end date
				enddate {
					noTrimWrap = | - ||
					required = 1
					dataWrap>
				}

				# @description	Content object for the event title
				title {
					dataWrap >
					crop >
				}

				alldayTitle {
					dataWrap >
					crop >
				}

				# @description	Content object for the no event found text
				noEventFound {
					wrap = <p>|</p> 
				}

				# @description	Content object for the event image
				image >
				image = IMAGE
				image {
					file {
						import = {$plugin.tx_cal_controller.uploadPath.image}
						import {
							current = 1
							listNum = 0
						}
						maxW = {$plugin.tx_cal_controller.listMaxW}
						maxH = {$plugin.tx_cal_controller.listMaxH}
					}
					altText {
						field = imagealttext
						listNum = 0
						listNum.splitChar = 10
					}
					titleText < .altText
					titleText.field = imagetitletext
				}

				# @description	Content object for the event description
				description {
					crop = 100|...|1
					stripHtml = 1
					dataWrap >
				}
	
				# @description	Content object for the event teaser
				teaser {
					dataWrap >
				}
			}

			# @description	Hide past events; 0=Hide nothing; 1=Hide all old events; 2=Hide old events except today
			dontShowOldEvents = 0
		}
		
		month.pageBrowser < plugin.tx_cal_controller.view.list.pageBrowser
		month.found_stdWrap < plugin.tx_cal_controller.view.list.found_stdWrap
		
		subscription {
			event < plugin.tx_cal_controller.view.list.event
		}
		
		ics {
			# @description	Turns on ICS/iCal links in the frontend.
			# @also			FlexForm
			showIcsLinks = {$plugin.tx_cal_controller.view.ics.showIcsLinks}

			# @description	Wraps the ics link
			link_wrap = <div class="ics_link">%s</div>

			# @description	The ics view link content object
			icsViewLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			icsViewLink {
				typolink.title.override.override {
					stdWrap {
						required = 1
						field = title
						wrap = |_
					}
					dataWrap = |%%%ICS_VIEW%%%
				}
				outerWrap.field = link_wrap
			}

			# @description	The ics view link content object for the ics list of a whole calendar
			icsViewCalendarLink < .icsViewLink
			icsViewCalendarLink.typolink.parameter.wrap = |,{$plugin.tx_cal_controller.view.ics.typeNum}
			
			# @description	The ics view link content object for the ics list of a whole category
			icsViewCategoryLink < .icsViewCalendarLink

			# @description	Template for ICS view.
			# @also			Constants
			icsTemplate = {$plugin.tx_cal_controller.view.ics.icsTemplate}

			# @description	Template for ICS list view.
			# @also			Constants
			icsListTemplate = {$plugin.tx_cal_controller.view.ics.icsListTemplate}

			event < plugin.tx_cal_controller.view.list.event 

			event {
				category = TEXT
				category {
					required = 1
					current = 1
					dataWrap = CATEGORIES:|
				}
				location = TEXT
				location {
					required = 1
					current = 1
					dataWrap = LOCATION:|
				}
				organizer = TEXT
				organizer {
					required = 1
					current = 1
					dataWrap = ORGANIZER;CN="|":
				}
				title = TEXT
				title {
					required = 1
					current = 1
					dataWrap = SUMMARY:|
				}
				
				alldayTitle < .title
				
				description = TEXT
				description {
					dataWrap = DESCRIPTION:|
					current = 1
					crop >
					prefixComment >
					parseFunc >
				}
				
				# @description	Content object for event attachment in ics view
				attachment_url = TEXT
				attachment_url {
					current = 1
					required = 1
					wrap = ATTACH:|;
				}
			}
			
			# @description	for more than one category this is the separator
			categoryLink_splitChar = TEXT
			categoryLink_splitChar {
				value = ,
				noTrimWrap= || |
			}
		}
		
		single_ics {
			event < plugin.tx_cal_controller.view.ics.event
			categoryLink_splitChar < plugin.tx_cal_controller.view.ics.categoryLink_splitChar
		}
		 
		admin {
			# @description	Template for frontend administrative view.
			# @also			Constants
			adminTemplate = {$plugin.tx_cal_controller.view.admin.adminTemplate}

			# @description	The admin link content
			adminViewLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			adminViewLink {
				current = 0
				value = <img src="###IMG_PATH###/config_calendar.gif" border="0" style="margin:2px;"/>
				typolink.title.override.override.dataWrap = %%%ADMINISTRATION_VIEW%%%
				outerWrap = <div class="admin_link">|</div>
			}

		}
		
		freeAndBusy {
			# @description  Enables a free & busy view of the calendar.
			enable = 0

			# @description  Class applied to free/busy header.
			headerStyle = fnb_header

			# @description  Class applied to free/busy body.
			bodyStyle = fnb_body

			# @description  Generic even title when viewed in free/busy view.
			eventTitle = Busy

			# @description	Default calendar to display in Free/Busy view.
			defaultCalendarUid = 0
		}

		other {
			# @description	Displays a login box with the calendar.  Requires the newloginbox extension.
			# @also			FlexForm
			# @see			http://typo3.org/extensions/repository/search/newloginbox/
			# @todo			Does it really require newlogin or will others work?
			showLogin = 0

			# @description	Page to perform login on.  If login fails, redirect to this page.
			loginPageId =

			# @description	Page where frontend users are stored.
			userFolderId =

			# @description	Show the search box.
			# @also			FlexForm
			showSearch = 0

			# @description	Show the goto box.
			# @also			FlexForm
			showGoto = 0

			# @description	Enables category filtering.
			# @also			FlexForm
			showCategorySelection = 0

			# @description	Submit button for the category selector.
			categorySelectorSubmit = <input type="image" class="refresh_calendar" src="###IMG_PATH###/refresh.gif" alt="%%%REFRESH_LABEL%%%" title="%%%REFRESH_LABEL%%%">

			# @description	Boolean value indicating whether the calendar switcher should be shown.
			showCalendarSelection = 0

			# @description	Template for option tag used in category and calendar selector.
			optionString = <option value="%s">%s</option>

			# @description	Adds a sidebar box with tomorrow's events.
			# @also			FlexForm
			showTomorrowEvents = 0

			# @description	Wrap for tomorrow's events shown in the sidebar.
			tomorrowsEvents = TEXT
			tomorrowsEvents {
				current = 1
				wrap = |<br />
			}

			# @description	Wrap for the legend shown in the sidebar.
			legend_stdWrap {
				wrap = |<div style="text-align:right;margin-left:10px;"></div>
			}

			# @description	Not currently implemented.
			showTodos = 0

			# @description	Enables calendar navigation from the sidebar.
			# @also			FlexForm
			showJumps = 0

			# @description	Date format for the dropdown list of weeks in the sidebar.
			dateFormatWeekJump = %b %d

			# @description	Option tag for weeks used to build the dropdown list in the sidebar.
			listWeeks_stdWrap {
				wrap = <option value="|" >###WEEK1### - ###WEEK2###</option>
			}

			# @description	Option tag for selected weeks used to build the dropdown list in the sidebar.
			listWeeksSelected_stdWrap {
				wrap = <option value="|" selected="selected">###WEEK1### - ###WEEK2###</option>
			}

			# @description	Only show the current year in the list of weeks.
			listWeek_onlyShowCurrentYear = 0

			# @description	Total number of weeks to show in the list.
			listWeek_totalWeekCount = 20

			# @description	Show this many weeks before the current week. Must be less than listWeek_totalWeekCount.
			listWeek_previousWeekCount = 5

			# @description	Date format for the dropdown list of months in the sidebar.
			dateFormatMonthJump = %B %Y

			# @description	Option tag for months used to build the dropdown list in the sidebar.
			listMonth_stdWrap {
				wrap = <option value="|" >###MONTH###</option>
			}

			# @description	Option tag for selected months used to build the dropdown list in the sidebar.
			listMonthSelected_stdWrap {
				wrap = <option value="|" selected="selected">###MONTH###</option>
			}

			# @description	Only show the current year in the list of months.
			listMonth_onlyShowCurrentYear = 0

			# @description	Total number of months to show in the list.
			listMonth_totalMonthCount = 12

			# @description	Show this many months before the current month. Must be less than listMonth_totalMonthCount.
			listMonth_previousMonthCount = 3
			
			# @description	Uses today as reference
			listMonth_referenceToday = 1

			# @description	Date format for the dropdown list of years in the sidebar.
			dateFormatYearJump = %Y

			# @description	Option tag for years used in the dropdown list of years in the sidebar.
			listYear_stdWrap {
				wrap = <option value="|" >###YEAR###</option>
			}

			# @description	Option tag for selected years used in the dropdown list of years in the sidebar.
			listYearSelected_stdWrap {
				wrap = <option value="|" selected="selected">###YEAR###</option>
			}

			# @description	Total number of years to show in the list.
			listYear_totalYearCount = 3

			# @description	Show this many years before the current year. Must be less than listYear_totalYearCount.
			listYear_previousYearCount = 1


			# @description	Template for the sidebar.
			# @also			Constants
			sidebarTemplate = {$plugin.tx_cal_controller.view.other.sidebarTemplate}

			# @description	Template for the search box.
			# @also			Constants
			searchBoxTemplate = {$plugin.tx_cal_controller.view.other.searchBoxTemplate}

			# @description	These options correspond to the ###MONTH_MENU### marker
			monthMenu {
	
				# @description	A static month to start the menu with
				monthStart = TEXT
				monthStart {
					current = 1
					setCurrent.dataWrap = {date:m}
					prioriCalc = intval
				}
	
				# @description	A static year to start the menu with
				yearStart = TEXT
				yearStart {
					current = 1
					setCurrent.dataWrap = {date:Y}
					prioriCalc = intval
				}
	
				# @description	Defines to take the current month and year shall be taken instead of what is defined at monthStart and yearStart
				monthStart.thisMonth = 1
	
				# @description	Number of items in the menu
				count = 5
	
				# @description	The format to display the links in
				format = %b %Y
	
				# @description	StandardWrap for each month link
				month_stdWrap {
					wrap = <span>|</span>
				}
			}
			
			# @description	These options correspond to the ###YEAR_MENU### marker
			yearMenu {
	
				# @description	A static year to start the menu with
				yearStart = TEXT
				yearStart {
					current = 1
					setCurrent.dataWrap = {date:Y}-3
					prioriCalc = intval
				}
	
				# @description	Defines to take the current year shall be taken instead of what is defined at yearStart
				yearStart.thisYear = 1
	
				# @description	Number of items in the menu
				count = 5
	
				# @description	The format to display the links in
				format = %Y
	
				# @description	StandardWrap for each year link
				year_stdWrap {
					wrap = <span>|</span>
				}
			}
		}

		search {
			# @description	Template for search results.
			# @also			Constants
			searchResultAllTemplate = {$plugin.tx_cal_controller.view.search.searchResultAllTemplate}

			# @description	Template for search results within an event.
			# @also			Constants
			searchResultEventTemplate = {$plugin.tx_cal_controller.view.search.searchResultEventTemplate}

			# @description	Template for search results within a location.
			# @also			Constants
			searchResultLocationTemplate = {$plugin.tx_cal_controller.view.search.searchResultLocationTemplate}

			# @description	Template for search results within an organizer.
			# @also			Constants
			searchResultOrganizerTemplate = {$plugin.tx_cal_controller.view.search.searchResultOrganizerTemplate}

			# @description	Fields to search within an event.
			searchEventFieldList = title,organizer,location,description

			# @description	Fields to search within a location.
			searchLocationFieldList = name

			# @description	Fields to search within an organizer.
			searchOrganizerFieldList = name
			
			# @description	Fields to search within an user.
			searchUserFieldList = name
			
			# @description	Fields to search within a group.
			searchGroupFieldList = title
			 
            # @description	Start Range for search.
			startRange = 19700102
            
            # @description	End Range for Search.
			endRange = 20300101
			
			# @description	The search link url
			searchLinkUrl =< plugin.tx_cal_controller.view.defaultLinkSetup
			searchLinkUrl {
				current = 
				value = |
				required = 1
				typolink {
					useCacheHash = 0
					returnLast = url
				}
			}

			# @description	The search-all view link content object
			searchAllLink =< plugin.tx_cal_controller.view.defaultLinkSetup
			searchAllLink.typolink.title.override.override.dataWrap = |%%%SEARCH%%%

			defaultValues {
				# @description	Default search term
				query =
				# @description	Date to start searching, in strtotime format.
				start_day = now
				# @description	Date to stop searching, in strtotime format.
				end_day = +1 month
			}
			
			# @description	This enables the seach view to wait for the user to submit the form.
			# If set to 0, the default will be taken to perform an initial search before any
			# interaction has taken place
			startSearchAfterSubmit = 1

			location < plugin.tx_cal_controller.view.location.location
			location.includeEventsInResult = 1

		}
		search_event < plugin.tx_cal_controller.view.list
		search_event {
			# @description	Formats the Headline
			heading = TEXT 
			heading {
				value = %%%QUERY_FOR%%% %%%EVENT%%%
			}
			event {
				# @description	Use the frontend date selector from rlmp_dateselectlib in search.
				# @see	http://typo3.org/extensions/repository/search/rlmp_dateselectlib/
				useDateSelector = 0
	
				rlmp_dateselectorlib_config {
					# @description	Format for the tooltip
					toolTipDateTimeFormat = {$plugin.tx_cal_controller.view.dateFormat}
		
					# @description	The label for the input button
					# tweaking the selectorlib also allows images:<img src="###IMG_PATH###/calendar.gif">
					inputFieldLabel =  Select
				}
			}
		}
		
		search_location < plugin.tx_cal_controller.view.list
		search_location {
			location < plugin.tx_cal_controller.view.location.location
			location {
				name {
					dataWrap >
				}
			}
		}
		
		search_organizer < plugin.tx_cal_controller.view.list
		search_organizer {
			organizer < plugin.tx_cal_controller.view.organizer.organizer
			organizer {
				name {
					dataWrap >
				}
			}
		}
		
		search_all < plugin.tx_cal_controller.view.list
		search_all {
			heading = TEXT
			heading.value = %%%SEARCH_EVERYTHING%%%
			
			searchEvent = TEXT
			searchEvent {
				current = 1
				wrap = <h2>%%%EVENTS%%%</h2>|
			}
			
			searchLocation = TEXT
			searchLocation {
				current = 1
				wrap = <h2>%%%LOCATION%%%</h2>|
			}
			
			searchOrganizer = TEXT
			searchOrganizer {
				current = 1
				wrap = <h2>%%%ORGANIZER%%%</h2>|
			}
			pageBrowser >
		}
		
		digest {
			# @description	Template for sending digest (list) mails.
			# @also			Constants
			listTemplate = {$plugin.tx_cal_controller.view.digest.listTemplate}
			
			# @description	Template for sending digest (detail) mails.
			# @also			Constants
			detailTemplate = {$plugin.tx_cal_controller.view.digest.detailTemplate}
		}
	}


	
	module {
		locationloader {
			# @description	Template for location loader module. It inserts location information into an event.
			template = {$plugin.tx_cal_controller.module.locationloader.template}
		}
		organizerloader {
			# @description	Template for organizer loader module. It inserts organizer information into an event.
			template = {$plugin.tx_cal_controller.module.organizerloader.template}
		}
	}
	
	# @description	For developers only: list of db fieldnames, that should be treated as textfields when preparing their values for the TS rendering object that is used to render all TS objects. You only need to change or enhance these values when you modify cal with custom fields or made other changes to cal
	autoFetchTextFields = imagecaption,imagealttext,imagetitletext,attachmentcaption
	
	# @description	For devolopers only: specify the string that is used to implode the values array of the textfields specified above. By default a linebreak is used, which should be suiteable for most TS rendering setups. Has stdWrap properties.
	autoFetchTextSplitValue.char = 10
	
}

plugin.tx_cal_controller.lib.list < plugin.tx_cal_controller.view.list
plugin.tx_cal_controller.lib.list {
	enableMonthWrapper = 0
	blub = 1
}

[compatVersion = 4.3]
plugin.tx_cal_controller.view.event.event.attachment.20.stdWrap.if.isTrue.field = tx_cal_media
plugin.tx_cal_controller.view.event.event.attachment.20.field = tx_cal_media
plugin.tx_cal_controller.view.event.event.attachment.20.filePath.field = nothing
[GLOBAL]